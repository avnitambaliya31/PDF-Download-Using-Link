import packages to your pubspec.yaml file : 

-> path_provider
-> dio
-> file_picker
-> open_file: ^3.2.1
->permission_handler



 Future openFile(context,url) async {
    Loader().showLoader(context);
    PermissionStatus permissionStatus =
    await Permission.storage.request();
    if (permissionStatus == PermissionStatus.granted) {
      var name = url.toString().split("/").last;
      final file = await downloadFile(context,url,name);

      if(file == null) {
        Loader().hideLoader(context);
        Fluttertoast.showToast(
            msg: "PDF Download Unsuccess");
      }

      if(file != null){
        Loader().hideLoader(context);
        Fluttertoast.showToast(
            msg: "PDF Download Successfully");
      }
      // OpenFile.open(file.path);

    } else if (permissionStatus == PermissionStatus.denied) {
      Fluttertoast.showToast(msg: "Storage Permisssion denined");
    }

  }

  Future<File?> downloadFile(context,String url, name)async {
    final appStrorage = await getExternalStorageDirectory(); ///await ExtStorage.getExternalStoragePublicDirectory(ExtStorage.DIRECTORY_DOWNLOADS);
    final pathData =  appStrorage!.path.split("/Android")[0];
    final file = File("${pathData}/Download/$name");
    try {
      final response = await Dio().get(url, onReceiveProgress: showDownloadProgress,options: Options(

          responseType: ResponseType.bytes,
          followRedirects: false,
          receiveTimeout: 0
      ));
      final raf = file.openSync(mode: FileMode.write);
      raf.writeFromSync(response.data);
      await raf.close();
      return file;
    } catch (e) {
      AlertBox().show(context, "Exception", e.toString());
      return null;
    }
  }

  void showDownloadProgress (received, total){
    if (total != -1){
      print ((received/ total * 100). toStringAsFixed(0) + "%");}
  }
